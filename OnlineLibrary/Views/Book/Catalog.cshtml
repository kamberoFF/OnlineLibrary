@using OnlineLibrary.ViewModels
@using OnlineLibrary.ViewModels.Book
@model BookCatalogViewModel
@{
    ViewData["Title"] = "Book Catalog";
}

<div class="container">
    <h1 class="mb-4">Book Catalog</h1>

    <div class="row mb-4">
        <div class="col-md-8">
            <form asp-action="Catalog" method="get" class="d-flex">
                <input type="text" name="searchString" value="@Model.SearchString" class="form-control me-2" placeholder="Search by title or author" />
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
        </div>
        <div class="col-md-4">
            <div class="dropdown">
                <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" id="genreDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    @(string.IsNullOrEmpty(Model.Genre) ? "All Genres" : Model.Genre)
                </button>
                <ul class="dropdown-menu w-100" aria-labelledby="genreDropdown">
                    <li><a class="dropdown-item" href="@Url.Action("Catalog", new { searchString = Model.SearchString })">All Genres</a></li>
                    @foreach (var genre in Model.Genres)
                    {
                        <li><a class="dropdown-item" href="@Url.Action("Catalog", new { searchString = Model.SearchString, genre = genre })">@genre</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (User.IsInRole("Admin"))
    {
        <div class="mb-4">
            <a asp-action="Create" class="btn btn-success">Add New Book</a>
        </div>
    }

    @if (Model.Books.Count == 0)
    {
        <div class="alert alert-info">
            No books found matching your criteria.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
            @foreach (var book in Model.Books)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">@book.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@book.Author</h6>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="badge bg-secondary">@book.Genre</span>
                                <span class="badge @(book.Available ? "bg-success" : "bg-danger")">
                                    @(book.Available ? "Available" : "Borrowed")
                                </span>
                            </div>
                            <p class="card-text">@(book.Description.Length > 100 ? book.Description.Substring(0, 100) + "..." : book.Description)</p>
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-grid">
                                <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-primary">View Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Catalog" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-searchString="@Model.SearchString" asp-route-genre="@Model.Genre">Previous</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" asp-action="Catalog" asp-route-pageIndex="@i" asp-route-searchString="@Model.SearchString" asp-route-genre="@Model.Genre">@i</a>
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Catalog" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-searchString="@Model.SearchString" asp-route-genre="@Model.Genre">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Next</span>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>